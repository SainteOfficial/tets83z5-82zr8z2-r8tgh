-- Erweitertes Zombie Aimbot Skript v2.0
local player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Debris = game:GetService("Debris")

-- Konfiguration
local config = {
    aimbot = {
        enabled = false,
        targetPriority = "distance", -- "distance", "health", "threat"
        maxDistance = 100,
        fireRate = 0.1,
        predictiveAiming = true,
        headShotOnly = true,
        visualFeedback = true,
        wallPenetration = true, -- Neuer Parameter: Ermöglicht Schüsse durch Wände/Hindernisse
        switchTargetKey = Enum.KeyCode.T,
        toggleKey = Enum.KeyCode.Z
    },
    ui = {
        theme = {
            background = Color3.fromRGB(25, 25, 35),
            backgroundTransparency = 0.2,
            accent = Color3.fromRGB(45, 125, 70),
            danger = Color3.fromRGB(180, 40, 40),
            text = Color3.fromRGB(255, 255, 255),
            subText = Color3.fromRGB(200, 200, 200)
        },
        draggable = true,
        minimizable = true
    }
}

-- Variablen
local cache = {
    targets = {},
    currentTarget = nil,
    weapon = nil,
    lastShot = 0,
    connections = {},
    tweens = {},
    ui = {}
}

-- Hilfsfunktionen
local util = {}

-- Optimiertes Speichermanagement
util.cleanupTweens = function()
    for _, tween in pairs(cache.tweens) do
        if tween.IsPlaying then
            tween:Cancel()
        end
    end
    cache.tweens = {}
end

-- Überprüft, ob die Sichtlinie frei ist (Raycast)
-- Falls wallPenetration aktiviert ist, wird die Prüfung übersprungen
util.isLineOfSightClear = function(origin, targetPosition)
    if config.aimbot.wallPenetration then
        return true
    end
    local rayParams = RaycastParams.new()
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist
    -- Spielercharakter und aktuelles Ziel ausfiltern
    rayParams.FilterDescendantsInstances = {player.Character, cache.currentTarget and cache.currentTarget.instance}
    local result = workspace:Raycast(origin, (targetPosition - origin), rayParams)
    return result == nil
end

-- Erweiterte Zielfindung
util.findZombies = function()
    local zombieFolder = workspace.Game.Zombies
    local zombies = zombieFolder:GetChildren()
    local validTargets = {}
    
    for _, zombie in pairs(zombies) do
        local head = zombie:FindFirstChild("Head")
        local humanoid = zombie:FindFirstChild("Humanoid")
        
        if head and humanoid and humanoid.Health > 0 then
            local distance = (player.Character.HumanoidRootPart.Position - head.Position).Magnitude
            
            if distance <= config.aimbot.maxDistance then
                table.insert(validTargets, {
                    instance = zombie,
                    head = head,
                    distance = distance,
                    health = humanoid.Health,
                    threat = distance / humanoid.Health -- Bedrohungswert: nähere und gesündere Zombies sind gefährlicher
                })
            end
        end
    end
    
    -- Sortiere Ziele nach Priorität
    table.sort(validTargets, function(a, b)
        if config.aimbot.targetPriority == "distance" then
            return a.distance < b.distance
        elseif config.aimbot.targetPriority == "health" then
            return a.health > b.health
        else -- "threat"
            return a.threat < b.threat
        end
    end)
    
    cache.targets = validTargets
    return validTargets
end

-- Erweiterte Waffenerkennung
util.getWeapon = function()
    if not player.Character then return nil end
    
    -- Zuerst im Inventar prüfen
    for _, item in pairs(player.Backpack:GetChildren()) do
        if item:FindFirstChild("Event") then
            return item
        end
    end
    
    -- Dann in der Hand prüfen
    for _, item in pairs(player.Character:GetChildren()) do
        if item:FindFirstChild("Event") then
            return item
        end
    end
    
    return nil
end

-- Prädiktives Zielen
util.calculateLeadShot = function(targetHead)
    if not config.aimbot.predictiveAiming or not targetHead then 
        return targetHead.Position 
    end
    
    local headVelocity = targetHead.Velocity
    local bulletSpeed = 300 -- Angenommene Geschwindigkeit der Projektile
    local distance = (player.Character.HumanoidRootPart.Position - targetHead.Position).Magnitude
    local timeToHit = distance / bulletSpeed
    
    return targetHead.Position + (headVelocity * timeToHit)
end

-- Erweiterte Schussfunktion mit Cooldown und Sichtlinienprüfung
util.fireAtTarget = function()
    local now = tick()
    if now - cache.lastShot < config.aimbot.fireRate then return end
    
    local weapon = util.getWeapon()
    if not weapon or not weapon:FindFirstChild("Event") then return end
    
    local target = cache.currentTarget
    if not target or not target.instance or not target.instance:FindFirstChild("Head") then
        -- Ziel verloren, neues Ziel finden
        local targets = util.findZombies()
        if #targets == 0 then return end
        cache.currentTarget = targets[1]
        target = cache.currentTarget
    end
    
    local head = target.instance:FindFirstChild("Head")
    if not head then return end
    
    local origin = player.Character.HumanoidRootPart.Position
    -- Sichtlinie prüfen – wird nur berücksichtigt, wenn wallPenetration deaktiviert ist
    if not util.isLineOfSightClear(origin, head.Position) then
        return
    end
    
    -- Berechne Zielposition mit Vorhersage
    local aimPosition = util.calculateLeadShot(head)
    
    -- Schieße auf das Ziel
    local args = { aimPosition }
    weapon.Event:FireServer(unpack(args))
    cache.lastShot = now
    
    -- Visuelles Feedback
    if config.aimbot.visualFeedback then
        util.createHitEffect(head.Position)
    end
end

-- Verbessertes visuelles Feedback für Treffer
util.createHitEffect = function(position)
    -- Haupteffekt (roter Punkt)
    local effect = Instance.new("Part")
    effect.Size = Vector3.new(0.5, 0.5, 0.5)
    effect.Position = position
    effect.Anchored = true
    effect.CanCollide = false
    effect.Material = Enum.Material.Neon
    effect.Shape = Enum.PartType.Ball
    effect.Color = Color3.fromRGB(255, 0, 0)
    effect.Transparency = 0.3
    effect.Parent = workspace.CurrentCamera

    -- Äußerer Ring
    local outerRing = Instance.new("Part")
    outerRing.Size = Vector3.new(0.7, 0.7, 0.1)
    outerRing.Position = position
    outerRing.Anchored = true
    outerRing.CanCollide = false
    outerRing.Material = Enum.Material.Neon
    outerRing.Shape = Enum.PartType.Cylinder
    outerRing.Color = Color3.fromRGB(255, 100, 0)
    outerRing.Transparency = 0.5
    outerRing.CFrame = CFrame.new(position) * CFrame.Angles(0, 0, math.rad(90))
    outerRing.Parent = workspace.CurrentCamera

    -- Animiere den Haupteffekt
    local tween = TweenService:Create(effect, TweenInfo.new(0.3), {Size = Vector3.new(0.1, 0.1, 0.1), Transparency = 1})
    tween:Play()
    table.insert(cache.tweens, tween)
    
    -- Animiere den äußeren Ring
    local outerTween = TweenService:Create(outerRing, TweenInfo.new(0.4), {Size = Vector3.new(2, 2, 0.05), Transparency = 1})
    outerTween:Play()
    table.insert(cache.tweens, outerTween)
    
    -- Partikeleffekt für noch mehr Feedback
    local attachment = Instance.new("Attachment")
    attachment.Position = position
    attachment.Parent = workspace.CurrentCamera
    
    local particles = Instance.new("ParticleEmitter")
    particles.Texture = "rbxassetid://241629053" -- Funkenpartikel
    particles.Color = ColorSequence.new(Color3.fromRGB(255, 200, 0), Color3.fromRGB(255, 0, 0))
    particles.Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0.3),
        NumberSequenceKeypoint.new(1, 0)
    })
    particles.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(1, 1)
    })
    particles.Lifetime = NumberRange.new(0.2, 0.4)
    particles.Speed = NumberRange.new(5, 10)
    particles.SpreadAngle = Vector2.new(180, 180)
    particles.Rate = 0
    particles.Rotation = NumberRange.new(0, 360)
    particles.RotSpeed = NumberRange.new(-90, 90)
    particles.Acceleration = Vector3.new(0, -10, 0)
    particles.Parent = attachment
    
    particles:Emit(10)
    
    -- Aufräumen
    Debris:AddItem(effect, 0.3)
    Debris:AddItem(outerRing, 0.4)
    Debris:AddItem(attachment, 0.5)
end

-- Zielwechselfunktion
util.switchTarget = function()
    local targets = cache.targets
    if #targets <= 1 then return end
    
    local currentIndex = 1
    for i, target in ipairs(targets) do
        if target == cache.currentTarget then
            currentIndex = i
            break
        end
    end
    
    -- Zum nächsten Ziel wechseln
    local nextIndex = currentIndex % #targets + 1
    cache.currentTarget = targets[nextIndex]
    
    -- Visuelles Feedback
    local head = cache.currentTarget.instance:FindFirstChild("Head")
    if head and config.aimbot.visualFeedback then
        util.createTargetIndicator(head)
    end
    
    util.updateTargetInfo()
end

-- Visueller Indikator für aktuelles Ziel
util.createTargetIndicator = function(head)
    local indicator = Instance.new("BillboardGui")
    indicator.Size = UDim2.new(0, 50, 0, 50)
    indicator.AlwaysOnTop = true
    indicator.Adornee = head
    indicator.Parent = head
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1
    frame.Parent = indicator
    
    local image = Instance.new("ImageLabel")
    image.Size = UDim2.new(1, 0, 1, 0)
    image.BackgroundTransparency = 1
    image.Image = "rbxassetid://4950537421" -- Zielkreuz Asset ID
    image.ImageColor3 = Color3.fromRGB(255, 0, 0)
    image.ImageTransparency = 0.5
    image.Parent = frame
    
    -- Animation: Drehender Effekt
    local tween = TweenService:Create(image, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1), {Rotation = 360})
    tween:Play()
    table.insert(cache.tweens, tween)
    
    Debris:AddItem(indicator, 3)
end

-- Aktualisiert die Zielinfo in der UI
util.updateTargetInfo = function()
    if cache.currentTarget and cache.currentTarget.instance and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local head = cache.currentTarget.instance:FindFirstChild("Head")
        local humanoid = cache.currentTarget.instance:FindFirstChild("Humanoid")
        if head and humanoid then
            local distance = math.floor((player.Character.HumanoidRootPart.Position - head.Position).Magnitude)
            cache.ui.targetLabel.Text = "Aktuelles Ziel: " .. cache.currentTarget.instance.Name
            cache.ui.distanceLabel.Text = "Entfernung: " .. distance
            cache.ui.healthLabel.Text = "Gesundheit: " .. math.floor(humanoid.Health)
        end
    else
        cache.ui.targetLabel.Text = "Aktuelles Ziel: Keins"
        cache.ui.distanceLabel.Text = "Entfernung: -"
        cache.ui.healthLabel.Text = "Gesundheit: -"
    end
end

-- UI-Komponenten erstellen
util.createUI = function()
    -- ScreenGui erstellen
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ZombieAimbotUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Parent = player.PlayerGui
    cache.ui.screenGui = ScreenGui
    
    -- Hauptframe
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 220, 0, 220)
    mainFrame.Position = UDim2.new(0.85, 0, 0.1, 0)
    mainFrame.BackgroundColor3 = config.ui.theme.background
    mainFrame.BackgroundTransparency = config.ui.theme.backgroundTransparency
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = ScreenGui
    cache.ui.mainFrame = mainFrame
    
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = mainFrame
    
    -- Titelleiste
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = config.ui.theme.accent
    titleBar.BackgroundTransparency = 0.2
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    cache.ui.titleBar = titleBar
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    local titleBottomCover = Instance.new("Frame")
    titleBottomCover.Size = UDim2.new(1, 0, 0, 10)
    titleBottomCover.Position = UDim2.new(0, 0, 1, -10)
    titleBottomCover.BackgroundColor3 = config.ui.theme.accent
    titleBottomCover.BackgroundTransparency = 0.2
    titleBottomCover.BorderSizePixel = 0
    titleBottomCover.Parent = titleBar
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0.7, 0, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = config.ui.theme.text
    title.Text = "Ultimate Zombie Aimbot"
    title.TextSize = 16
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = titleBar
    
    -- Minimieren-Button
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Size = UDim2.new(0, 25, 0, 25)
    minimizeButton.Position = UDim2.new(1, -30, 0, 2)
    minimizeButton.BackgroundColor3 = config.ui.theme.background
    minimizeButton.BackgroundTransparency = 0.5
    minimizeButton.TextColor3 = config.ui.theme.text
    minimizeButton.Text = "-"
    minimizeButton.TextSize = 20
    minimizeButton.Font = Enum.Font.GothamBold
    minimizeButton.Parent = titleBar
    cache.ui.minimizeButton = minimizeButton
    
    local minimizeCorner = Instance.new("UICorner")
    minimizeCorner.CornerRadius = UDim.new(0, 4)
    minimizeCorner.Parent = minimizeButton
    
    -- Toggle-Button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0.9, 0, 0, 40)
    toggleButton.Position = UDim2.new(0.05, 0, 0, 40)
    toggleButton.BackgroundColor3 = config.ui.theme.accent
    toggleButton.TextColor3 = config.ui.theme.text
    toggleButton.Text = "Aktivieren [Z]"
    toggleButton.TextSize = 16
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Parent = mainFrame
    cache.ui.toggleButton = toggleButton
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 6)
    toggleCorner.Parent = toggleButton
    
    -- Prioritätsauswahl
    local priorityLabel = Instance.new("TextLabel")
    priorityLabel.Size = UDim2.new(0.9, 0, 0, 20)
    priorityLabel.Position = UDim2.new(0.05, 0, 0, 90)
    priorityLabel.BackgroundTransparency = 1
    priorityLabel.TextColor3 = config.ui.theme.subText
    priorityLabel.Text = "Zielpriorität:"
    priorityLabel.TextSize = 14
    priorityLabel.Font = Enum.Font.Gotham
    priorityLabel.TextXAlignment = Enum.TextXAlignment.Left
    priorityLabel.Parent = mainFrame
    
    local priorityFrame = Instance.new("Frame")
    priorityFrame.Size = UDim2.new(0.9, 0, 0, 25)
    priorityFrame.Position = UDim2.new(0.05, 0, 0, 110)
    priorityFrame.BackgroundColor3 = config.ui.theme.background
    priorityFrame.BackgroundTransparency = 0.5
    priorityFrame.BorderSizePixel = 0
    priorityFrame.Parent = mainFrame
    
    local priorityCorner = Instance.new("UICorner")
    priorityCorner.CornerRadius = UDim.new(0, 4)
    priorityCorner.Parent = priorityFrame
    
    local priorityOptions = {
        {name = "Entfernung", value = "distance"},
        {name = "Gesundheit", value = "health"},
        {name = "Bedrohung", value = "threat"}
    }
    
    local buttons = {}
    local buttonWidth = 1 / #priorityOptions
    
    for i, option in ipairs(priorityOptions) do
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(buttonWidth, 0, 1, 0)
        button.Position = UDim2.new(buttonWidth * (i-1), 0, 0, 0)
        button.BackgroundColor3 = option.value == config.aimbot.targetPriority and config.ui.theme.accent or config.ui.theme.background
        button.BackgroundTransparency = 0.7
        button.TextColor3 = config.ui.theme.text
        button.Text = option.name
        button.TextSize = 12
        button.Font = Enum.Font.Gotham
        button.Parent = priorityFrame
        buttons[option.value] = button
        
        button.MouseButton1Click:Connect(function()
            config.aimbot.targetPriority = option.value
            
            for _, btn in pairs(buttons) do
                btn.BackgroundColor3 = config.ui.theme.background
            end
            
            button.BackgroundColor3 = config.ui.theme.accent
            
            -- Ziele neu sortieren
            util.findZombies()
            if #cache.targets > 0 then
                cache.currentTarget = cache.targets[1]
                util.updateTargetInfo()
            end
        end)
    end
    
    -- Optionen
    local optionsFrame = Instance.new("Frame")
    optionsFrame.Size = UDim2.new(0.9, 0, 0, 60)
    optionsFrame.Position = UDim2.new(0.05, 0, 0, 145)
    optionsFrame.BackgroundColor3 = config.ui.theme.background
    optionsFrame.BackgroundTransparency = 0.5
    optionsFrame.BorderSizePixel = 0
    optionsFrame.Parent = mainFrame
    
    local optionsCorner = Instance.new("UICorner")
    optionsCorner.CornerRadius = UDim.new(0, 4)
    optionsCorner.Parent = optionsFrame
    
    -- Checkbox-Funktion
    local function createCheckbox(text, position, initialValue, callback)
        local checkboxFrame = Instance.new("Frame")
        checkboxFrame.Size = UDim2.new(1, 0, 0, 20)
        checkboxFrame.Position = position
        checkboxFrame.BackgroundTransparency = 1
        checkboxFrame.Parent = optionsFrame
        
        local checkBox = Instance.new("Frame")
        checkBox.Size = UDim2.new(0, 16, 0, 16)
        checkBox.Position = UDim2.new(0, 5, 0.5, -8)
        checkBox.BackgroundColor3 = config.ui.theme.background
        checkBox.BorderColor3 = config.ui.theme.subText
        checkBox.BorderSizePixel = 1
        checkBox.Parent = checkboxFrame
        
        local checkBoxCorner = Instance.new("UICorner")
        checkBoxCorner.CornerRadius = UDim.new(0, 2)
        checkBoxCorner.Parent = checkBox
        
        local checkMark = Instance.new("Frame")
        checkMark.Size = UDim2.new(0.7, 0, 0.7, 0)
        checkMark.Position = UDim2.new(0.15, 0, 0.15, 0)
        checkMark.BackgroundColor3 = config.ui.theme.accent
        checkMark.BorderSizePixel = 0
        checkMark.Visible = initialValue
        checkMark.Parent = checkBox
        
        local checkMarkCorner = Instance.new("UICorner")
        checkMarkCorner.CornerRadius = UDim.new(0, 1)
        checkMarkCorner.Parent = checkMark
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(0.85, 0, 1, 0)
        label.Position = UDim2.new(0.15, 0, 0, 0)
        label.BackgroundTransparency = 1
        label.TextColor3 = config.ui.theme.subText
        label.Text = text
        label.TextSize = 12
        label.Font = Enum.Font.Gotham
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = checkboxFrame
        
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 1, 0)
        button.BackgroundTransparency = 1
        button.Text = ""
        button.Parent = checkboxFrame
        
        local checked = initialValue
        button.MouseButton1Click:Connect(function()
            checked = not checked
            checkMark.Visible = checked
            callback(checked)
        end)
        
        return {
            frame = checkboxFrame,
            update = function(value)
                checked = value
                checkMark.Visible = checked
            end
        }
    end
    
    -- Optionen erstellen
    local headShotCheckbox = createCheckbox("Kopfschuss Focus", UDim2.new(0, 0, 0, 0), config.aimbot.headShotOnly, function(value)
        config.aimbot.headShotOnly = value
    end)
    
    local predictiveCheckbox = createCheckbox("Prädiktives Zielen", UDim2.new(0, 0, 0, 20), config.aimbot.predictiveAiming, function(value)
        config.aimbot.predictiveAiming = value
    end)
    
    local visualFeedbackCheckbox = createCheckbox("Visuelles Feedback", UDim2.new(0, 0, 0, 40), config.aimbot.visualFeedback, function(value)
        config.aimbot.visualFeedback = value
    end)
    
    -- Zielinformationen
    local targetInfoFrame = Instance.new("Frame")
    targetInfoFrame.Size = UDim2.new(0.9, 0, 0, 40)
    targetInfoFrame.Position = UDim2.new(0.05, 0, 1, -45)
    targetInfoFrame.BackgroundColor3 = config.ui.theme.background
    targetInfoFrame.BackgroundTransparency = 0.5
    targetInfoFrame.BorderSizePixel = 0
    targetInfoFrame.Parent = mainFrame
    cache.ui.targetInfoFrame = targetInfoFrame
    
    local targetInfoCorner = Instance.new("UICorner")
    targetInfoCorner.CornerRadius = UDim.new(0, 4)
    targetInfoCorner.Parent = targetInfoFrame
    
    local targetLabel = Instance.new("TextLabel")
    targetLabel.Size = UDim2.new(1, 0, 0, 20)
    targetLabel.Position = UDim2.new(0, 5, 0, 0)
    targetLabel.BackgroundTransparency = 1
    targetLabel.TextColor3 = config.ui.theme.subText
    targetLabel.Text = "Aktuelles Ziel: Keins"
    targetLabel.TextSize = 12
    targetLabel.Font = Enum.Font.Gotham
    targetLabel.TextXAlignment = Enum.TextXAlignment.Left
    targetLabel.Parent = targetInfoFrame
    cache.ui.targetLabel = targetLabel
    
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(0.5, 0, 0, 20)
    distanceLabel.Position = UDim2.new(0, 5, 0, 20)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = config.ui.theme.subText
    distanceLabel.Text = "Entfernung: -"
    distanceLabel.TextSize = 12
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextXAlignment = Enum.TextXAlignment.Left
    distanceLabel.Parent = targetInfoFrame
    cache.ui.distanceLabel = distanceLabel
    
    local healthLabel = Instance.new("TextLabel")
    healthLabel.Size = UDim2.new(0.5, 0, 0, 20)
    healthLabel.Position = UDim2.new(0.5, 0, 0, 20)
    healthLabel.BackgroundTransparency = 1
    healthLabel.TextColor3 = config.ui.theme.subText
    healthLabel.Text = "Gesundheit: -"
    healthLabel.TextSize = 12
    healthLabel.Font = Enum.Font.Gotham
    healthLabel.TextXAlignment = Enum.TextXAlignment.Left
    healthLabel.Parent = targetInfoFrame
    cache.ui.healthLabel = healthLabel
end

-- UI erstellen
util.createUI()

-- UI-Buttons: Toggle und Minimieren
cache.ui.toggleButton.MouseButton1Click:Connect(function()
    config.aimbot.enabled = not config.aimbot.enabled
    if config.aimbot.enabled then
        cache.ui.toggleButton.Text = "Deaktivieren [Z]"
    else
        cache.ui.toggleButton.Text = "Aktivieren [Z]"
    end
end)

cache.ui.minimizeButton.MouseButton1Click:Connect(function()
    cache.ui.mainFrame.Visible = not cache.ui.mainFrame.Visible
end)

-- Tasten-Events für Toggle und Zielwechsel
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == config.aimbot.toggleKey then
        config.aimbot.enabled = not config.aimbot.enabled
        if config.aimbot.enabled then
            cache.ui.toggleButton.Text = "Deaktivieren [Z]"
        else
            cache.ui.toggleButton.Text = "Aktivieren [Z]"
        end
    elseif input.KeyCode == config.aimbot.switchTargetKey then
        util.switchTarget()
    end
end)

-- Hauptloop: Sucht Ziele und feuert, wenn der Aimbot aktiviert ist
RS.Heartbeat:Connect(function()
    if config.aimbot.enabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local targets = util.findZombies()
        if #targets > 0 then
            if not cache.currentTarget then
                cache.currentTarget = targets[1]
            end
            util.fireAtTarget()
        end
        util.updateTargetInfo()
    end
end)
