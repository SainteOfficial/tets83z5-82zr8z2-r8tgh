-- Erweitertes Zombie Aimbot Skript v2.0
local player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Debris = game:GetService("Debris")

-- Konfiguration
local config = {
    aimbot = {
        enabled = false,
        targetPriority = "distance", -- "distance", "health", "threat"
        maxDistance = 100,
        fireRate = 0.1,
        predictiveAiming = true,
        headShotOnly = true,
        visualFeedback = true,
        switchTargetKey = Enum.KeyCode.T,
        toggleKey = Enum.KeyCode.Z
    },
    ui = {
        theme = {
            background = Color3.fromRGB(25, 25, 35),
            backgroundTransparency = 0.2,
            accent = Color3.fromRGB(45, 125, 70),
            danger = Color3.fromRGB(180, 40, 40),
            text = Color3.fromRGB(255, 255, 255),
            subText = Color3.fromRGB(200, 200, 200)
        },
        draggable = true,
        minimizable = true
    }
}

-- Variablen
local cache = {
    targets = {},
    currentTarget = nil,
    weapon = nil,
    lastShot = 0,
    connections = {},
    tweens = {},
    ui = {}
}

-- Hilfsfunktionen
local util = {}

-- Optimiertes Speichermanagement
util.cleanupTweens = function()
    for _, tween in pairs(cache.tweens) do
        if tween.IsPlaying then
            tween:Cancel()
        end
    end
    cache.tweens = {}
end

-- Erweiterte Zielfindung
util.findZombies = function()
    local zombieFolder = workspace.Game.Zombies
    local zombies = zombieFolder:GetChildren()
    local validTargets = {}
    
    for _, zombie in pairs(zombies) do
        local head = zombie:FindFirstChild("Head")
        local humanoid = zombie:FindFirstChild("Humanoid")
        
        if head and humanoid and humanoid.Health > 0 then
            local distance = (player.Character.HumanoidRootPart.Position - head.Position).Magnitude
            
            if distance <= config.aimbot.maxDistance then
                table.insert(validTargets, {
                    instance = zombie,
                    head = head,
                    distance = distance,
                    health = humanoid.Health,
                    threat = distance / humanoid.Health -- Bedrohungswert: nähere und gesündere Zombies sind gefährlicher
                })
            end
        end
    end
    
    -- Sortiere Ziele nach Priorität
    table.sort(validTargets, function(a, b)
        if config.aimbot.targetPriority == "distance" then
            return a.distance < b.distance
        elseif config.aimbot.targetPriority == "health" then
            return a.health > b.health
        else -- "threat"
            return a.threat < b.threat
        end
    end)
    
    cache.targets = validTargets
    return validTargets
end

-- Erweiterte Waffenerkennung
util.getWeapon = function()
    if not player.Character then return nil end
    
    -- Zuerst im Inventar prüfen
    for _, item in pairs(player.Backpack:GetChildren()) do
        if item:FindFirstChild("Event") then
            return item
        end
    end
    
    -- Dann in der Hand prüfen
    for _, item in pairs(player.Character:GetChildren()) do
        if item:FindFirstChild("Event") then
            return item
        end
    end
    
    return nil
end

-- Prädiktives Zielen
util.calculateLeadShot = function(targetHead)
    if not config.aimbot.predictiveAiming or not targetHead then return targetHead.Position end
    
    local headVelocity = targetHead.Velocity
    local bulletSpeed = 300 -- Angenommene Geschwindigkeit der Projektile
    local distance = (player.Character.HumanoidRootPart.Position - targetHead.Position).Magnitude
    local timeToHit = distance / bulletSpeed
    
    return targetHead.Position + (headVelocity * timeToHit)
end

-- Erweiterte Schussfunktion mit Cooldown
util.fireAtTarget = function()
    local now = tick()
    if now - cache.lastShot < config.aimbot.fireRate then return end
    
    local weapon = util.getWeapon()
    if not weapon or not weapon:FindFirstChild("Event") then return end
    
    local target = cache.currentTarget
    if not target or not target.instance or not target.instance:FindFirstChild("Head") then
        -- Ziel verloren, neues Ziel finden
        local targets = util.findZombies()
        if #targets == 0 then return end
        cache.currentTarget = targets[1]
        target = cache.currentTarget
    end
    
    local head = target.instance:FindFirstChild("Head")
    if not head then return end
    
    -- Berechne Zielposition mit Vorhersage
    local aimPosition = util.calculateLeadShot(head)
    
    -- Schieße auf das Ziel
    local args = {
        [1] = aimPosition
    }
    weapon.Event:FireServer(unpack(args))
    cache.lastShot = now
    
    -- Visuelles Feedback
    if config.aimbot.visualFeedback then
        util.createHitEffect(head.Position)
    end
end

-- Visuelles Feedback für Treffer
util.createHitEffect = function(position)
    local effect = Instance.new("Part")
    effect.Size = Vector3.new(0.5, 0.5, 0.5)
    effect.Position = position
    effect.Anchored = true
    effect.CanCollide = false
    effect.Material = Enum.Material.Neon
    effect.Shape = Enum.PartType.Ball
    effect.Color = Color3.fromRGB(255, 0, 0)
    effect.Transparency = 0.3
    effect.Parent = workspace.CurrentCamera
    
    local tween = TweenService:Create(effect, TweenInfo.new(0.3), {Size = Vector3.new(0.1, 0.1, 0.1), Transparency = 1})
    tween:Play()
    table.insert(cache.tweens, tween)
    
    Debris:AddItem(effect, 0.3)
end

-- Zielwechselfunktion
util.switchTarget = function()
    local targets = cache.targets
    if #targets <= 1 then return end
    
    local currentIndex = 1
    for i, target in ipairs(targets) do
        if target == cache.currentTarget then
            currentIndex = i
            break
        end
    end
    
    -- Zum nächsten Ziel wechseln
    local nextIndex = currentIndex % #targets + 1
    cache.currentTarget = targets[nextIndex]
    
    -- Visuelles Feedback
    local head = cache.currentTarget.instance:FindFirstChild("Head")
    if head and config.aimbot.visualFeedback then
        util.createTargetIndicator(head)
    end
    
    -- UI aktualisieren
    util.updateTargetInfo()
end

-- Visueller Indikator für aktuelles Ziel
util.createTargetIndicator = function(head)
    local indicator = Instance.new("BillboardGui")
    indicator.Size = UDim2.new(0, 50, 0, 50)
    indicator.AlwaysOnTop = true
    indicator.Adornee = head
    indicator.Parent = head
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1
    frame.Parent = indicator
    
    local image = Instance.new("ImageLabel")
    image.Size = UDim2.new(1, 0, 1, 0)
    image.BackgroundTransparency = 1
    image.Image = "rbxassetid://4950537421" -- Zielkreuz Asset ID
    image.ImageColor3 = Color3.fromRGB(255, 0, 0)
    image.ImageTransparency = 0.5
    image.Parent = frame
    
    -- Animation
    local tween = TweenService:Create(image, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1), {Rotation = 360})
    tween:Play()
    table.insert(cache.tweens, tween)
    
    Debris:AddItem(indicator, 3)
end

-- UI-Komponenten erstellen
util.createUI = function()
    -- ScreenGui erstellen
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ZombieAimbotUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Parent = player.PlayerGui
    cache.ui.screenGui = ScreenGui
    
    -- Hauptframe
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 220, 0, 220)
    mainFrame.Position = UDim2.new(0.85, 0, 0.1, 0)
    mainFrame.BackgroundColor3 = config.ui.theme.background
    mainFrame.BackgroundTransparency = config.ui.theme.backgroundTransparency
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = ScreenGui
    cache.ui.mainFrame = mainFrame
    
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = mainFrame
    
    -- Titelleiste
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = config.ui.theme.accent
    titleBar.BackgroundTransparency = 0.2
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    cache.ui.titleBar = titleBar
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    local titleBottomCover = Instance.new("Frame")
    titleBottomCover.Size = UDim2.new(1, 0, 0, 10)
    titleBottomCover.Position = UDim2.new(0, 0, 1, -10)
    titleBottomCover.BackgroundColor3 = config.ui.theme.accent
    titleBottomCover.BackgroundTransparency = 0.2
    titleBottomCover.BorderSizePixel = 0
    titleBottomCover.Parent = titleBar
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(0.7, 0, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = config.ui.theme.text
    title.Text = "Ultimate Zombie Aimbot"
    title.TextSize = 16
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = titleBar
    
    -- Minimieren-Button
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Size = UDim2.new(0, 25, 0, 25)
    minimizeButton.Position = UDim2.new(1, -30, 0, 2)
    minimizeButton.BackgroundColor3 = config.ui.theme.background
    minimizeButton.BackgroundTransparency = 0.5
    minimizeButton.TextColor3 = config.ui.theme.text
    minimizeButton.Text = "-"
    minimizeButton.TextSize = 20
    minimizeButton.Font = Enum.Font.GothamBold
    minimizeButton.Parent = titleBar
    cache.ui.minimizeButton = minimizeButton
    
    local minimizeCorner = Instance.new("UICorner")
    minimizeCorner.CornerRadius = UDim.new(0, 4)
    minimizeCorner.Parent = minimizeButton
    
    -- Toggle-Button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0.9, 0, 0, 40)
    toggleButton.Position = UDim2.new(0.05, 0, 0, 40)
    toggleButton.BackgroundColor3 = config.ui.theme.accent
    toggleButton.TextColor3 = config.ui.theme.text
    toggleButton.Text = "Aktivieren [Z]"
    toggleButton.TextSize = 16
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Parent = mainFrame
    cache.ui.toggleButton = toggleButton
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 6)
    toggleCorner.Parent = toggleButton
    
    -- Prioritätsauswahl
    local priorityLabel = Instance.new("TextLabel")
    priorityLabel.Size = UDim2.new(0.9, 0, 0, 20)
    priorityLabel.Position = UDim2.new(0.05, 0, 0, 90)
    priorityLabel.BackgroundTransparency = 1
    priorityLabel.TextColor3 = config.ui.theme.subText
    priorityLabel.Text = "Zielpriorität:"
    priorityLabel.TextSize = 14
    priorityLabel.Font = Enum.Font.Gotham
    priorityLabel.TextXAlignment = Enum.TextXAlignment.Left
    priorityLabel.Parent = mainFrame
    
    local priorityFrame = Instance.new("Frame")
    priorityFrame.Size = UDim2.new(0.9, 0, 0, 25)
    priorityFrame.Position = UDim2.new(0.05, 0, 0, 110)
    priorityFrame.BackgroundColor3 = config.ui.theme.background
    priorityFrame.BackgroundTransparency = 0.5
    priorityFrame.BorderSizePix
