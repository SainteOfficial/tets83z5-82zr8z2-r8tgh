-- Auto-Farm Bot für Roblox
-- Dieses Script automatisiert das Farmen von Mobs

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Variablen
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

-- Konfiguration
local CONFIG = {
    HOVER_HEIGHT = 15, -- Höhe über dem Mob
    AUTO_ATTACK = true, -- Automatisch angreifen aktivieren
    CLICK_INTERVAL = {0.05, 0.15}, -- Zufälliges Intervall für menschlicheres Timing
    TARGET_MOB_TYPE = "Golem", -- Typ des Ziels (z.B. "Golem")
    HITBOX_SIZE = Vector3.new(10, 10, 10), -- Größe der erweiterten Hitbox
    DEBUG_MODE = true -- Debug-Modus aktivieren/deaktivieren
}

-- Variablen für Script-Zustand
local CurrentTarget = nil
local IsAttacking = false
local FlyEnabled = false
local HitboxExpander = nil

-- Debug-Funktion
local function Debug(message)
    if CONFIG.DEBUG_MODE then
        print("[Auto-Farm] " .. message)
    end
end

-- Finde den nächsten Mob
local function FindNearestMob()
    local nearestMob = nil
    local shortestDistance = math.huge
    
    -- Überprüfe, ob der Mobs-Ordner existiert
    if not workspace:FindFirstChild("Mobs") then
        Debug("Keine Mobs gefunden!")
        return nil
    end
    
    -- Durchsuche alle Mobs
    for _, mob in pairs(workspace.Mobs:GetChildren()) do
        -- Prüfe, ob es sich um den gesuchten Mobtyp handelt
        if mob.Name:find(CONFIG.TARGET_MOB_TYPE) then
            -- Prüfe, ob der Mob einen HumanoidRootPart hat
            local mobHRP = mob:FindFirstChild("HumanoidRootPart")
            local mobHumanoid = mob:FindFirstChild("Humanoid")
            
            if mobHRP and mobHumanoid and mobHumanoid.Health > 0 then
                local distance = (HumanoidRootPart.Position - mobHRP.Position).Magnitude
                
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestMob = mob
                end
            end
        end
    end
    
    return nearestMob
end

-- Aktiviere/Deaktiviere Fliegen
local function ToggleFly(enable)
    if FlyEnabled == enable then return end
    
    FlyEnabled = enable
    
    if enable then
        Debug("Flugmodus aktiviert")
        -- Implementiere hier deinen Flugmechanismus
        -- Dies ist ein Beispiel und muss möglicherweise an das spezifische Spiel angepasst werden
        local Humanoid = Character:FindFirstChild("Humanoid")
        if Humanoid then
            Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
            workspace.Gravity = 0
        end
    else
        Debug("Flugmodus deaktiviert")
        workspace.Gravity = 196.2 -- Standard-Gravitationswert
        local Humanoid = Character:FindFirstChild("Humanoid")
        if Humanoid then
            Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        end
    end
end

-- Erstelle oder aktualisiere die erweiterte Hitbox für das Ziel
local function UpdateHitbox(target)
    if not target then
        if HitboxExpander then
            HitboxExpander:Destroy()
            HitboxExpander = nil
        end
        return
    end
    
    local targetHRP = target:FindFirstChild("HumanoidRootPart")
    if not targetHRP then return end
    
    if not HitboxExpander then
        HitboxExpander = Instance.new("Part")
        HitboxExpander.Name = "HitboxExpander"
        HitboxExpander.Anchored = false
        HitboxExpander.CanCollide = false
        HitboxExpander.Transparency = 0.8 -- Leicht sichtbar für Debugging
        HitboxExpander.Material = Enum.Material.SmoothPlastic
        HitboxExpander.Color = Color3.fromRGB(255, 0, 0)
        
        -- Weld zum Ziel
        local Weld = Instance.new("Weld")
        Weld.Part0 = targetHRP
        Weld.Part1 = HitboxExpander
        Weld.C0 = CFrame.new(0, 0, 0)
        Weld.Parent = HitboxExpander
        
        HitboxExpander.Parent = workspace
    end
    
    -- Aktualisiere die Größe und Position
    HitboxExpander.Size = CONFIG.HITBOX_SIZE
    HitboxExpander.CFrame = targetHRP.CFrame
end

-- Positioniere den Spieler über dem Ziel
local function PositionOverTarget(target)
    if not target then return end
    
    local targetHRP = target:FindFirstChild("HumanoidRootPart")
    if not targetHRP then return end
    
    -- Berechne die Position über dem Ziel
    local targetPosition = targetHRP.Position + Vector3.new(0, CONFIG.HOVER_HEIGHT, 0)
    
    -- Positioniere den Spieler
    HumanoidRootPart.CFrame = CFrame.new(targetPosition) * CFrame.Angles(math.rad(90), 0, 0) -- 90 Grad nach unten schauen
    
    -- Kamera ausrichten
    Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetHRP.Position)
end

-- Simuliere einen Mausklick
local function SimulateClick()
    -- Koordinaten des Bildschirmmittelpunkts
    local screenSize = Camera.ViewportSize
    local centerX = screenSize.X / 2
    local centerY = screenSize.Y / 2
    
    -- Sende Mausereignis (linke Maustaste drücken und loslassen)
    VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 1) -- Drücken
    task.wait(0.05) -- Kurze Verzögerung
    VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 1) -- Loslassen
    
    -- Füge eine zufällige Verzögerung hinzu
    task.wait(math.random(CONFIG.CLICK_INTERVAL[1] * 100, CONFIG.CLICK_INTERVAL[2] * 100) / 100)
end

-- Hauptschleife für den Auto-Farm
local function StartAutoFarm()
    if IsAttacking then return end
    IsAttacking = true
    Debug("Auto-Farm gestartet")
    
    -- Hauptschleife
    while IsAttacking do
        -- Finde das nächste Ziel
        CurrentTarget = FindNearestMob()
        
        if CurrentTarget then
            Debug("Ziel gefunden: " .. CurrentTarget.Name)
            
            -- Aktiviere Fliegen
            ToggleFly(true)
            
            -- Erstelle erweiterte Hitbox
            UpdateHitbox(CurrentTarget)
            
            -- Positioniere über dem Ziel
            PositionOverTarget(CurrentTarget)
            
            -- Wenn Auto-Attack aktiviert ist, führe einen Angriff aus
            if CONFIG.AUTO_ATTACK then
                SimulateClick()
            end
        else
            Debug("Kein Ziel gefunden, suche weiter...")
            -- Optionales Verhalten, wenn kein Ziel gefunden wird
            task.wait(1)
        end
        
        -- Pause, um die Hauptschleife nicht zu überlasten
        task.wait(0.1)
    end
end

-- Stoppe den Auto-Farm
local function StopAutoFarm()
    IsAttacking = false
    ToggleFly(false)
    UpdateHitbox(nil) -- Entferne Hitbox
    Debug("Auto-Farm gestoppt")
end

-- Toggle-Funktion für die Aktivierung/Deaktivierung des Bots
local function ToggleAutoFarm()
    if IsAttacking then
        StopAutoFarm()
    else
        StartAutoFarm()
    end
end

-- Ereignisbehandlung für Benutzereingaben (STRG+F zum Umschalten)
local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.F and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
        ToggleAutoFarm()
    end
end)

-- Event-Handler für Character-Respawn
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    Debug("Charakter respawned, aktualisiere Referenzen")
    
    -- Wenn der Bot aktiv war, starte ihn neu
    if IsAttacking then
        StopAutoFarm()
        task.wait(1)
        StartAutoFarm()
    end
end)

-- Starte den Bot automatisch beim Laden des Scripts
-- Entferne den Kommentar, wenn der Bot sofort starten soll
-- StartAutoFarm()

Debug("Script geladen! Drücke STRG+F, um den Auto-Farm zu aktivieren/deaktivieren.")
